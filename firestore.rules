rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }
    function isAdmin() { return signedIn() && request.auth.token.admin == true; }

    // ── Helpers for registration payloads ──────────────────────────────────────
    // Guests: NO user_id field allowed. Validate required fields + types.
    function hasGuestEventRegistrationFields() {
      return
        // only the listed fields (no user_id)
        request.resource.data.keys().hasOnly([
          'event_id','role','contact_name','contact_email','phone',
          'organization_name','guest_country','amount_usd','amount_cad',
          'fx_rate','is_guest_registration','reservation_code','created_at'
        ]) &&
        request.resource.data.event_id is string &&
        request.resource.data.role is string &&
        request.resource.data.contact_name is string &&
        request.resource.data.contact_email is string &&
        request.resource.data.phone is string &&
        request.resource.data.organization_name is string &&
        request.resource.data.guest_country is string &&
        request.resource.data.amount_usd is number &&
        request.resource.data.amount_cad is number &&
        request.resource.data.fx_rate is number &&
        request.resource.data.is_guest_registration == true &&
        request.resource.data.reservation_code is string &&
        // force server timestamp
        request.resource.data.created_at == request.time;
    }

    // Authed users: must include user_id matching auth.uid
    function hasAuthedEventRegistrationFields() {
      return
        request.resource.data.keys().hasOnly([
          'event_id','role','contact_name','contact_email','phone',
          'organization_name','guest_country','amount_usd','amount_cad',
          'fx_rate','is_guest_registration','reservation_code','created_at','user_id'
        ]) &&
        request.resource.data.user_id is string &&
        request.resource.data.user_id == request.auth.uid &&
        request.resource.data.event_id is string &&
        request.resource.data.role is string &&
        request.resource.data.contact_name is string &&
        request.resource.data.contact_email is string &&
        request.resource.data.phone is string &&
        request.resource.data.organization_name is string &&
        request.resource.data.guest_country is string &&
        request.resource.data.amount_usd is number &&
        request.resource.data.amount_cad is number &&
        request.resource.data.fx_rate is number &&
        // for signed-in flows this can be either true/false
        request.resource.data.is_guest_registration is bool &&
        request.resource.data.reservation_code is string &&
        request.resource.data.created_at == request.time;
    }

    // ── Collections ───────────────────────────────────────────────────────────

    // AboutPageContent
    match /AboutPageContent/{docId} {
      allow read, write: if isAdmin();
    }

    // Agent
    match /Agent/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // AgentPackage
    match /AgentPackage/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Asset
    match /Asset/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // BankSettings
    match /BankSettings/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // BrandSettings
    match /BrandSettings/{docId} {
      allow read, write: if isAdmin();
    }

    // Case
    match /Case/{docId} {
      allow create: if signedIn() && request.resource.data.student_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.student_id == request.auth.uid;
    }

    // ChatSettings
    match /ChatSettings/{docId} {
      allow read, write: if isAdmin();
    }

    // Contact
    match /Contact/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // ContactPageContent
    match /ContactPageContent/{docId} {
      allow read, write: if isAdmin();
    }

    // Conversation
    match /Conversation/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Event
    match /Event/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // EventAssignment
    match /EventAssignment/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // EventRegistration  ✅ allow guests
    match /EventRegistration/{docId} {
      allow create: if isAdmin() ||
                    (signedIn() && hasAuthedEventRegistrationFields()) ||
                    (!signedIn() && hasGuestEventRegistrationFields());
      // keep your current read/update policy
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid || isAdmin();
    }

    // ExhibitorRegistration  ✅ allow guests
    match /ExhibitorRegistration/{docId} {
      allow create: if isAdmin() ||
                    (signedIn() && hasAuthedEventRegistrationFields()) ||
                    (!signedIn() && hasGuestEventRegistrationFields());
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid || isAdmin();
    }

    // FAQ
    match /FAQ/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // FairEvent
    match /FairEvent/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // HomePageContent
    match /HomePageContent/{docId} {
      allow read, write: if isAdmin();
    }

    // Institution
    match /Institution/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // KnowledgeBase
    match /KnowledgeBase/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // Lead
    match /Lead/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // MarketplaceOrder
    match /MarketplaceOrder/{docId} {
      allow create: if signedIn() && request.resource.data.student_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.student_id == request.auth.uid;
    }

    // Message
    match /Message/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // OurTeamPageContent
    match /OurTeamPageContent/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Package
    match /Package/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Payment
    match /Payment/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Post
    match /Post/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Program
    match /Program/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // Registration
    match /Registration/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Reservation
    match /Reservation/{docId} {
      allow create: if signedIn() && request.resource.data.student_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.student_id == request.auth.uid;
    }

    // School
    match /School/{docId} {
      allow read: if true;
      allow write: if false;
    }

    // SchoolProfile
    match /SchoolProfile/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Service
    match /Service/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // StudentRSVP  ✅ allow guests
    match /StudentRSVP/{docId} {
      allow create: if isAdmin() ||
                    (signedIn() && hasAuthedEventRegistrationFields()) ||
                    (!signedIn() && hasGuestEventRegistrationFields());
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid || isAdmin();
    }

    // StudentTutorPackage
    match /StudentTutorPackage/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // SupportAgent
    match /SupportAgent/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // SupportTicket
    match /SupportTicket/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Tutor
    match /Tutor/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // TutorPackage
    match /TutorPackage/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // TutoringSession
    match /TutoringSession/{docId} {
      allow create: if signedIn() && request.resource.data.student_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.student_id == request.auth.uid;
    }

    // User
    match /User/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // Vendor
    match /Vendor/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // VisaDocument
    match /VisaDocument/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // VisaPackage
    match /VisaPackage/{docId} {
      allow create: if signedIn();
      allow read: if signedIn();
      allow update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // VisaRequest
    match /VisaRequest/{docId} {
      allow create: if signedIn() && request.resource.data.student_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.student_id == request.auth.uid;
    }

    // Wallet
    match /Wallet/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // WalletTransaction
    match /WalletTransaction/{docId} {
      allow create: if signedIn() && request.resource.data.user_id == request.auth.uid;
      allow read, update, delete: if signedIn() && resource.data.user_id == request.auth.uid;
    }

    // ========= promotions =========
    match /promotions/{id} {
      allow read: if true;

      function validPromotion() {
        return request.resource.data.keys().hasOnly([
          "title_en","title_vi","subtitle_en","subtitle_vi",
          "description_en","description_vi","image_url",
          "price_label_en","price_label_vi",
          "registration_fee_label_en","registration_fee_label_vi",
          "location_en","location_vi","tags_en","tags_vi",
          "cta_label_en","cta_label_vi","cta_link",
          "start_date","end_date","is_active","priority"
      ])
      && request.resource.data.image_url is string
      && request.resource.data.cta_link is string
      && request.resource.data.is_active is bool
      && request.resource.data.priority is number;
    }

    allow create, update, delete: if isAdmin() && validPromotion();
  }

    // Final deny-all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
