rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function authed() { return request.auth != null; }
    function isOwner(uid) { return authed() && request.auth.uid == uid; }
    function isImage() { return request.resource.contentType.matches('image/.*'); }
    function isUnder2MB() { return request.resource.size <= 2 * 1024 * 1024; }

    // Public site media (admins upload via Admin editors)
    match /home/{allPaths=**} {
      allow read: if true;
      allow write: if authed(); // tighten to custom claims later if needed
    }
    match /about/{allPaths=**} {
      allow read: if true;
      allow write: if authed();
    }

    // User profile images: users can write their own; public can read
    match /users/{uid}/profile/{file=**} {
      allow read: if true;
      allow write: if isOwner(uid) && isImage() && isUnder2MB();
    }

    // Default: block everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
